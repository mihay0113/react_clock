{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","this","interval","setInterval","setState","console","log","prevProps","prevState","name","props","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","renameClock","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA2CeA,E,4MAvCbC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sB,uDAGnB,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WAC1B,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,O,gCAGL,SAAmBS,EAAWC,GACxBD,EAAUE,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IACN,qCAA8BC,EAAUE,KAAxC,kBACQR,KAAKS,MAAMD,S,kCAKzB,WACEE,cAAcV,KAAKC,Y,oBAGrB,WACE,OACE,mDACoBD,KAAKJ,MAAMC,W,GA9BjBc,IAAMC,WCyCXC,G,kNAtCbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,K,EAGbC,UAAY,WACV,EAAKb,SAAS,CAAEW,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKd,SAAS,CAAEW,gBAAgB,K,EAGlCI,YAAc,WACZ,EAAKf,SAAS,CAAEY,UAAU,GAAD,OAAKI,KAAKC,MAAsB,GAAhBD,KAAKE,c,4CAGhD,WACE,IAAQzB,EAA6CI,KAA7CJ,MAAOoB,EAAsChB,KAAtCgB,UAAWC,EAA2BjB,KAA3BiB,UAAWC,EAAgBlB,KAAhBkB,YAErC,OACE,yBAAKI,UAAU,OACb,2CACC1B,EAAMkB,gBAAkB,kBAAC,EAAD,CAAON,KAAMZ,EAAMmB,YAC5C,4BAAQQ,KAAK,SAASC,QAASR,GAA/B,cAGA,4BAAQO,KAAK,SAASC,QAASP,GAA/B,cAGA,4BAAQM,KAAK,SAASC,QAASN,GAA/B,qB,GA/BUP,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2bbf8f5c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(\n        `The Clock was renamed from ${prevProps.name} `\n        + `to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <p>\n        {`Current time: ${this.state.date}`}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\n\nimport Clock from './Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: '1',\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  renameClock = () => {\n    this.setState({ clockName: `${Math.round(Math.random() * 10)}` });\n  }\n\n  render() {\n    const { state, showClock, hideClock, renameClock } = this;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {state.isClockVisible && <Clock name={state.clockName} />}\n        <button type=\"button\" onClick={showClock}>\n          Show Clock\n        </button>\n        <button type=\"button\" onClick={hideClock}>\n          Hide Clock\n        </button>\n        <button type=\"button\" onClick={renameClock}>\n          Raname Clock\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}